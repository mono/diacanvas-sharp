Problem with generating C# code for interface CanvasGroupable

Found the source of the problem .. shared="true" should be removed .. somehow in a metatag I guess.
Also check if renaming of Add and Remove signals is nessesary

Here is the XML generated:

    <interface name="CanvasGroupable" cname="DiaCanvasGroupable">
      <signal name="Add" cname="add" when="LAST">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="DiaCanvasItem*" name="group"/>
          <parameter type="DiaCanvasItem*" name="item"/>
        </parameters>
      </signal>
      <signal name="Remove" cname="remove" when="LAST">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="DiaCanvasItem*" name="group"/>
          <parameter type="DiaCanvasItem*" name="item"/>
        </parameters>
      </signal>
      <method name="Add" cname="dia_canvas_groupable_add" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="DiaCanvasItem*" name="group"/>
          <parameter type="DiaCanvasItem*" name="item"/>
        </parameters>
      </method>
      <method name="AddConstruction" cname="dia_canvas_groupable_add_construction" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="DiaCanvasItem*" name="group"/>
          <parameter type="DiaCanvasItem*" name="item"/>
        </parameters>
      </method>
      <method name="GetIter" cname="dia_canvas_groupable_get_iter" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="DiaCanvasItem*" name="group"/>
          <parameter type="DiaCanvasIter*" name="iter"/>
        </parameters>
      </method>
      <method name="GetType" cname="dia_canvas_groupable_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="Length" cname="dia_canvas_groupable_length" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter type="DiaCanvasItem*" name="group"/>
        </parameters>
      </method>
      <method name="Next" cname="dia_canvas_groupable_next" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="DiaCanvasItem*" name="group"/>
          <parameter type="DiaCanvasIter*" name="iter"/>
        </parameters>
      </method>
      <method name="Pos" cname="dia_canvas_groupable_pos" shared="true">
        <return-type type="gint"/>
        <parameters>
          <parameter type="DiaCanvasItem*" name="group"/>
          <parameter type="DiaCanvasItem*" name="item"/>
        </parameters>
      </method>
      <method name="Remove" cname="dia_canvas_groupable_remove" shared="true">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="DiaCanvasItem*" name="group"/>
          <parameter type="DiaCanvasItem*" name="item"/>
        </parameters>
      </method>
      <method name="RemoveDestruction" cname="dia_canvas_groupable_remove_destruction" shared="true">
        <return-type type="void"/>
        <parameters>
          <parameter type="DiaCanvasItem*" name="group"/>
          <parameter type="DiaCanvasItem*" name="item"/>
        </parameters>
      </method>
      <method name="Value" cname="dia_canvas_groupable_value" shared="true">
        <return-type type="DiaCanvasItem*"/>
        <parameters>
          <parameter type="DiaCanvasItem*" name="group"/>
          <parameter type="DiaCanvasIter*" name="iter"/>
        </parameters>
      </method>
    </interface>

This is the C# code generated
#region Autogenerated code
        public interface CanvasGroupable : GLib.IWrapper {
 
                event DiaSharp.RemoveHandler Remove;
                event DiaSharp.AddHandler Add;
        }
#endregion

Umh all the methods are missing :(

===================================
Field has unknown Type GObjectClass

Seems to be a problem with DiaVariable

    <struct name="VariableClass" cname="DiaVariableClass">
      <field cname="parent_class" type="GObjectClass"/>

This problem is also showing in GtkSharp .. so maybe it should not
be that much of a problem.
