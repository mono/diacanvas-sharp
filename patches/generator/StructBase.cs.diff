? StructBase.cs.diff
Index: StructBase.cs
===================================================================
RCS file: /cvs/public/gtk-sharp/generator/StructBase.cs,v
retrieving revision 1.37
diff -u -r1.37 StructBase.cs
--- StructBase.cs	23 Jul 2003 17:19:19 -0000	1.37
+++ StructBase.cs	21 Aug 2003 10:32:10 -0000
@@ -146,12 +146,41 @@
 			return true;
 		}
 
+		string ConvertKeyWord (string keyword)
+		{
+			return Char.ToUpper (keyword [0]) + keyword.Substring (1);
+		}
+
+		bool IsKeyWord (string word)
+		{
+			switch (word) {
+			case "abstract": case "base": case "bool": case "break": case "byte":
+			case "case": case "catch": case "char": case "checked": case "class":
+			case "const": case "continue": case "decimal": case "default": 
+			case "delegate": case "do": case "double": case "else": case "enum": 
+			case "event": case "explicit": case "extern": case "false": 
+			case "finally": case "fixed": case "float": case "for": case "foreach":
+			case "goto": case "if": case "implicit": case "in": case "int": 
+			case "interface": case "internal": case "is": case "lock": case "long":
+			case "namespace": case "new": case "null": case "object": 
+			case "operator": case "out": case "override": case "params": 
+			case "private": case "protected": case "public": case "readonly":
+			case "ref": case "return": case "sbyte": case "sealed": case "short":
+			case "sizeof": case "static": case "string": case "struct": 
+			case "switch": case "this": case "throw": case "true": case "try":
+			case "typeof": case "uint": case "ulong": case "unchecked": 
+			case "unsafe": case "ushort": case "using": case "virtual": 
+			case "void": case "while": return true;
+			default: return false;
+			}
+		}
+
 		protected bool GenField (XmlElement field, StreamWriter sw)
 		{
 			string c_type, type, name;
 			if (!GetFieldInfo (field, out c_type, out type, out name))
 				return false;
-			sw.WriteLine ("\t\tpublic {0} {1};", type, name);
+			sw.WriteLine ("\t\tpublic {0} {1};", type, IsKeyWord (name) ? ConvertKeyWord (name) : name);
 
 			if (field.HasAttribute("array_len"))
 				Console.WriteLine ("warning: array field {0}.{1} probably incorrectly generated", QualifiedName, name);
