<Type Name="HandleLayer" FullName="Dia.HandleLayer">
  <TypeSignature Language="C#" Value="public class HandleLayer : Gnome.CanvasItem, IWrapper, IDisposable" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>diacanvas-sharp</AssemblyName>
    <AssemblyPublicKey />
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gnome.CanvasItem</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected override void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with the object.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateHandles">
      <MemberSignature Language="C#" Value="public void UpdateHandles (Dia.CanvasViewItem item);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Dia.CanvasViewItem" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="item">a <see cref="T:Dia.CanvasViewItem" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrabHandle">
      <MemberSignature Language="C#" Value="public void GrabHandle (Dia.Handle handle);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Dia.Handle" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="handle">a <see cref="T:Dia.Handle" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestRedraw">
      <MemberSignature Language="C#" Value="public void RequestRedraw (int x, int y);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="x">a <see cref="T:System.Int32" /></param>
        <param name="y">a <see cref="T:System.Int32" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestRedrawHandle">
      <MemberSignature Language="C#" Value="public void RequestRedrawHandle (Dia.Handle handle);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Dia.Handle" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="handle">a <see cref="T:Dia.Handle" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HandleLayer (GLib.Type gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.Type" />
      </Parameters>
      <Docs>
        <summary>Internal constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.Type" /> for the this type.</param>
        <returns>a <see cref="T:Dia.HandleLayer" /> created using the provided <see cref="T:GLib.Type" />.</returns>
        <remarks>This is a constructor used by derivative types that would have their own <see cref="T:GLib.Type" /> assigned to it. This is not typically used by C# code.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleLayer (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor.</summary>
        <param name="raw">a <see cref="T:System.IntPtr" /> to the C object.</param>
        <returns>a <see cref="T:Dia.HandleLayer" /> wrapping the C object.</returns>
        <remarks>This is an internal constructor, and should not be used by user code.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HandleLayer ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Internal constructor.</summary>
        <returns>a <see cref="T:Dia.HandleLayer" /></returns>
        <remarks>This is an internal constructor, and should not be used by user code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The Type for the <see cref="T:Dia.HandleLayer" /></summary>
        <returns>A <see cref="T:System.UInt32" /> number representing the <see cref="GLib.Type" /></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosC">
      <MemberSignature Language="C#" Value="public void GetPosC (Dia.Handle handle, out int x, out int y);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Dia.Handle" />
        <Parameter Name="x" Type="System.Int32" RefType="out" />
        <Parameter Name="y" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="handle">a <see cref="T:Dia.Handle" /></param>
        <param name="x">a <see cref="T:System.Int32" /></param>
        <param name="y">a <see cref="T:System.Int32" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>