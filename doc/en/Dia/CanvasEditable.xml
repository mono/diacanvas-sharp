<Type Name="CanvasEditable" FullName="Dia.CanvasEditable">
  <TypeSignature Language="C#" Value="public abstract interface CanvasEditable" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>diacanvas-sharp</AssemblyName>
    <AssemblyPublicKey />
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>
      <see cref="T:Dia.CanvasItem" />'s which support 
    editable text implements this interface.
    </summary>
    <remarks>
    </remarks>
  </Docs>
  <Base />
  <Interfaces>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="EditingStart">
      <MemberSignature Language="C#" Value="public virtual void EditingStart (Dia.ShapeText text_shape);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text_shape" Type="Dia.ShapeText" />
      </Parameters>
      <Docs>
        <summary>Start a text-edit session.</summary>
        <param name="text_shape">
	a <see cref="T:Dia.ShapeText" /> object that contains 
	all information about the text to be edited.
	</param>
        <remarks>Note that text_shape is not altered during editing.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeText">
      <MemberSignature Language="C#" Value="public virtual void ChangeText (Dia.ShapeText text_shape, string new_text);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text_shape" Type="Dia.ShapeText" />
        <Parameter Name="new_text" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Change the text.</summary>
        <param name="text_shape">
	a <see cref="T:Dia.ShapeText" /> object that contains 
	all information about the text to be edited.
	</param>
        <param name="new_text">a <see cref="T:System.String" /> representing the new text.</param>
        <remarks>Note that text_shape is not altered during editing.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoneEditing">
      <MemberSignature Language="C#" Value="public virtual void DoneEditing (Dia.ShapeText text_shape, string new_text);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text_shape" Type="Dia.ShapeText" />
        <Parameter Name="new_text" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>End a text-edit session.</summary>
        <param name="text_shape">
	a <see cref="T:Dia.ShapeText" /> object that contains 
	all information about the text to be edited.
	</param>
        <param name="new_text">a <see cref="T:System.String" /> representing the new text.</param>
        <remarks>Note that text_shape is not altered during editing.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingDone">
      <MemberSignature Language="C#" Value="public virtual event Dia.EditingDoneHandler EditingDone;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Dia.EditingDoneHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Editing is done, the new text is returned.</summary>
        <remarks>The <see cref="T:Dia.CanvasItem" /> should update the text.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartEditing">
      <MemberSignature Language="C#" Value="public virtual event Dia.StartEditingHandler StartEditing;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Dia.StartEditingHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Editing has started.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public virtual event Dia.TextChangedHandler TextChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Dia.TextChangedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The text has been changed.</summary>
        <remarks>
	The view should update the text editor 
	to reflect the change.
        In case of <see cref="T:Dia.CanvasView" /> 
	the text area is updated based on the
        (new) state of @new_text.
	</remarks>
      </Docs>
    </Member>
  </Members>
</Type>